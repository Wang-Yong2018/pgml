# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "ml_titanic"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "ml_titanic"

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  ml_titanic:
    # This configures models found in models/events/
    marts:
      schema: superset
      +materialized: view

      # This configures models found in models/events/base
      # These models will be ephemeral, as the config above is overridden
    cross_validate:
      schema: models
      +materialized: incremental
      +tags:
        - 'CV'
    fit_models:
      schema: models
      +materialized: incremental
      +tags:
        - 'FIT'
    staging:
      +materialized: table
      train:
      dim:
        +schema: fe
        +tags: 
          - 'FE'
      
on-run-start:
    - '{{create_types()}}'
    - '{{create_udfs()}}'